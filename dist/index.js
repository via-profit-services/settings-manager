/*!
 * 
 *  Via Profit Services / Settings Manager
 * 
 *  Repository https://github.com/via-profit-services/settings-manager
 *  Contact    promo@via-profit.ru
 *  Website    https://via-profit.ru
 *       
 */
module.exports=function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=3)}([function(e,n){e.exports=require("@via-profit-services/core")},function(e,n,t){"use strict";var i=this&&this.__awaiter||function(e,n,t,i){return new(t||(t=Promise))((function(o,r){function a(e){try{d(i.next(e))}catch(e){r(e)}}function s(e){try{d(i.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}d((i=i.apply(e,n||[])).next())}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=t(0),a=o(t(8));class s{constructor(e){this.props=e}getSettings(e){return i(this,void 0,void 0,(function*(){const{context:n}=this.props,{knex:t}=n,{limit:i,offset:o,orderBy:a,where:s,search:d}=e;return yield t.select(["*"]).from("settings").limit(i||1).offset(o||0).where(e=>r.convertWhereToKnex(e,s)).where(e=>(d&&d.forEach(({field:n,query:t})=>{t.split(" ").map(t=>e.orWhereRaw(`"${n}"::text ${r.TWhereAction.ILIKE} '%${t}%'`))}),e)).orderBy(r.convertOrderByToKnex(a))}))}getSettingsByIds(e){return i(this,void 0,void 0,(function*(){return yield this.getSettings({where:[["id",r.TWhereAction.IN,e]],offset:0,limit:e.length})}))}static DataToPseudoId(e){const{group:n,category:t,name:i,owner:o}=e;return[n,t,i,o].join("|")}static getDataFromPseudoId(e){const[n,t,i,o]=e.split("|");return{group:n,category:t,name:i,owner:o}}getSettingsByPseudoIds(e){return i(this,void 0,void 0,(function*(){const{knex:n}=this.props.context;return yield n.select(["*"]).from("settings").limit(1e3).where(n=>(e.forEach(e=>{const t=s.getDataFromPseudoId(e);n.orWhere(e=>{e.where("category",r.TWhereAction.EQ,t.category),e.where("group",r.TWhereAction.EQ,t.group),e.where("name",r.TWhereAction.EQ,t.name),e.andWhere(e=>{t.owner?e.where("owner",r.TWhereAction.EQ,t.owner).orWhereNull("owner"):e.whereNull("owner")})})}),n))}))}updateSettings(e,n){return i(this,void 0,void 0,(function*(){const{knex:t,timezone:i}=this.props.context,o=Object.assign(Object.assign({},n),{id:e,value:r.convertJsonToKnex(t,n.value),updatedAt:a.default.tz(i).format()}),[s]=yield t("settings").update(o).where("id",e).returning("id");return s}))}createSettings(e){return i(this,void 0,void 0,(function*(){const{knex:n,timezone:t}=this.props.context,i=Object.assign(Object.assign({},e),{value:r.convertJsonToKnex(n,e.value),createdAt:a.default.tz(t).format(),updatedAt:a.default.tz(t).format()}),[o]=yield n("settings").insert(i).returning("id");return o}))}deleteSettings(e){return i(this,void 0,void 0,(function*(){const{knex:n}=this.props.context,[t]=yield n("settings").del().where({id:e}).returning("id");return t}))}}n.SettingsService=s,n.default=s},function(e,n){e.exports=require("uuid")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){for(var t in e)n.hasOwnProperty(t)||(n[t]=e[t])}(t(4))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){for(var t in e)n.hasOwnProperty(t)||(n[t]=e[t])}(t(5))},function(e,n,t){"use strict";function i(e){for(var t in e)n.hasOwnProperty(t)||(n[t]=e[t])}var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n};Object.defineProperty(n,"__esModule",{value:!0});const a=o(t(6));n.resolvers=a.default;const s=r(t(9));n.typeDefs=s;const d=o(t(1));n.service=d.default,i(t(10)),i(t(12)),i(t(13))},function(e,n,t){"use strict";var i=this&&this.__awaiter||function(e,n,t,i){return new(t||(t=Promise))((function(o,r){function a(e){try{d(i.next(e))}catch(e){r(e)}}function s(e){try{d(i.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}d((i=i.apply(e,n||[])).next())}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=t(0),a=t(2),s=o(t(7)),d=o(t(1)),u={Query:{settings:(e,n)=>i(void 0,void 0,void 0,(function*(){return n}))},Mutation:{settings:()=>({})},SettingsCollection:{common:()=>({})},SettingsCommonGroup:{contact:()=>({})},SettingsCommonFields:{developer:()=>"Via Profit"},SettingsValue:new Proxy({id:()=>({}),value:()=>({}),createdAt:()=>({}),updatedAt:()=>({}),owner:()=>({}),group:()=>({}),category:()=>({})},{get:(e,n)=>(e,t,o)=>i(void 0,void 0,void 0,(function*(){const t=d.default.DataToPseudoId(e),i=s.default(o),a=yield i.settings.load(t);if(void 0===a){const{logger:n}=o;throw n.settings.error("Attempt to get a nonexistent field with pseudoId "+t,{parent:e}),new r.BadRequestError("Settings of this params not exists",{parent:e})}return void 0===a[n]?null:a[n]}))}),SettingsMutation:{set:(e,n,t)=>i(void 0,void 0,void 0,(function*(){const{token:e,logger:i}=t,{id:o,group:u,category:l,name:c,owner:g,value:p}=n,m=d.default.DataToPseudoId(n);s.default(t).settings.clear(m);const f=new d.default({context:t}),[v]=yield f.getSettings({limit:1,where:[["group",r.TWhereAction.EQ,u],["category",r.TWhereAction.EQ,l],["name",r.TWhereAction.EQ,c],["owner",g?r.TWhereAction.EQ:r.TWhereAction.NULL,g]]}),y=`${u}->${l}->${c}->owner:${g||"none"}`;if(v)try{yield f.updateSettings(v.id,{value:p}),v.owner?i.settings.info(`Account ${e.uuid} updated personal settings ${y} to set «${JSON.stringify(p)}»`,{settingsID:v.id}):i.settings.info(`Account ${e.uuid} updated global settings ${y} to set ${JSON.stringify(p)}`,{settingsID:v.id});const[n]=yield f.getSettingsByIds([v.id]);return n}catch(e){throw new r.ServerError("Failed to update settings with id "+v.id,{err:e})}else try{const t={id:o||a.v4(),group:u,category:l,name:c,owner:g||null,value:p};return yield f.createSettings(t),t.owner?i.settings.info(`Account ${e.uuid} created new personal settings ${y} to set «${JSON.stringify(p)}»`,{settingsID:t.id}):i.settings.info(`Account ${e.uuid} created new global settings ${y} to set ${JSON.stringify(p)}`,{settingsID:t.id}),n}catch(e){throw new r.ServerError("Failed to create settings",{err:e})}})),delete:(e,n,t)=>i(void 0,void 0,void 0,(function*(){const{id:e}=n,{token:i,logger:o}=t,a=new d.default({context:t}),[u]=yield a.getSettingsByIds([e]),l=`${u.group}->${u.category}->${u.name}->owner:${u.owner||"none"}`,c=s.default(t),g=d.default.DataToPseudoId(u);c.settings.clear(g);try{yield a.deleteSettings(e)}catch(n){throw new r.ServerError(`Failed to delete settings ${l} with id ${e}`,{err:n})}return u.owner?o.settings.info(`Account ${i.uuid} deleted personal settings ${l}`,{settingsID:u.id}):o.settings.info(`Account ${i.uuid} deleted global settings ${l}`,{settingsID:u.id}),!0}))}};n.default=u},function(e,n,t){"use strict";var i=this&&this.__awaiter||function(e,n,t,i){return new(t||(t=Promise))((function(o,r){function a(e){try{d(i.next(e))}catch(e){r(e)}}function s(e){try{d(i.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}d((i=i.apply(e,n||[])).next())}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=t(0),a=t(2),s=o(t(1)),d={settings:null};n.default=function(e){if(null!==d.settings)return d;const n=new s.default({context:e});return d.settings=new r.DataLoader(e=>i(this,void 0,void 0,(function*(){const t=yield n.getSettingsByPseudoIds(e);return e.map(e=>{const{category:i,group:o,name:r,owner:d}=s.default.getDataFromPseudoId(e),u=t.filter(e=>e.category===i&&e.group===o&&e.name===r),l=u.find(e=>e.owner===d);if(!l){const e=Object.assign(Object.assign({},u[0]),{owner:d,comment:"",id:a.v4()});return n.createSettings(e),e}return l})}))),d}},function(e,n){e.exports=require("moment-timezone")},function(e,n){var t={kind:"Document",definitions:[{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"Returns settings",block:!0},name:{kind:"Name",value:"settings"},arguments:[{kind:"InputValueDefinition",description:{kind:"StringValue",value:"If this property was set then settings will be returns only for this owner ID",block:!0},name:{kind:"Name",value:"owner"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SettingsCollection"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"settings"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SettingsMutation"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"SettingsMutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"Set single settings field",block:!0},name:{kind:"Name",value:"set"},arguments:[{kind:"InputValueDefinition",description:{kind:"StringValue",value:"You may provide custom ID of this record",block:!0},name:{kind:"Name",value:"id"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Settings group name",block:!0},name:{kind:"Name",value:"group"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Settings category",block:!0},name:{kind:"Name",value:"category"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SettingsCategory"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Settings field name",block:!0},name:{kind:"Name",value:"name"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Settings value",block:!0},name:{kind:"Name",value:"value"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"If this property was set then settings will be updated only for this owner ID",block:!0},name:{kind:"Name",value:"owner"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SettingsValue"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"delete"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]}]},{kind:"EnumTypeDefinition",description:{kind:"StringValue",value:"Category of the settings",block:!0},name:{kind:"Name",value:"SettingsCategory"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"general"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"ui"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"contact"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"constraint"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"currency"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"size"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"label"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"other"},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"Settings collection.",block:!0},name:{kind:"Name",value:"SettingsCollection"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"common"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SettingsCommonGroup"}}},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"Group of settings fields",block:!0},name:{kind:"Name",value:"SettingsCommonGroup"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"contact"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SettingsCommonFields"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"SettingsCommonFields"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"developer"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"SettingsValue"}},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"Settings results bag",block:!0},name:{kind:"Name",value:"SettingsValue"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Creation date of this settings field",block:!0},name:{kind:"Name",value:"createdAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Updated date of this settings field",block:!0},name:{kind:"Name",value:"updatedAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"The presence of this parameter determines whether the parameter is shared by all or personal to this owner",block:!0},name:{kind:"Name",value:"owner"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Settings group name",block:!0},name:{kind:"Name",value:"group"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"category"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SettingsCategory"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Settings value",block:!0},name:{kind:"Name",value:"value"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}},directives:[]}]}],loc:{start:0,end:1658}};t.loc.source={body:'extend type Query {\n\n  """\n  Returns settings\n  """\n  settings(\n    """\n    If this property was set then settings will be returns only for this owner ID\n    """\n    owner: ID\n  ): SettingsCollection!\n}\n\nextend type Mutation {\n  settings: SettingsMutation!\n}\n\ntype SettingsMutation {\n\n  """\n  Set single settings field\n  """\n  set(\n    """\n    You may provide custom ID of this record\n    """\n    id: ID\n    """\n    Settings group name\n    """\n    group: String!\n\n    """\n    Settings category\n    """\n    category: SettingsCategory!\n\n    """\n    Settings field name\n    """\n    name: String!\n\n    """\n    Settings value\n    """\n    value: JSON!\n\n    """\n    If this property was set then settings will be updated only for this owner ID\n    """\n    owner: ID\n    ): SettingsValue!\n\n  delete(id: ID!): Boolean!\n}\n\n"""\nCategory of the settings\n"""\nenum SettingsCategory {\n  general\n  ui\n  contact\n  constraint\n  currency\n  size\n  label\n  other\n}\n\n"""\nSettings collection.\n"""\ntype SettingsCollection {\n  common: SettingsCommonGroup!\n}\n\n"""\nGroup of settings fields\n"""\ntype SettingsCommonGroup {\n  contact: SettingsCommonFields!\n}\n\ntype SettingsCommonFields {\n  developer: SettingsValue\n}\n\n"""\nSettings results bag\n"""\ntype SettingsValue {\n  id: ID!\n\n  """\n  Creation date of this settings field\n  """\n  createdAt: DateTime!\n\n  """\n  Updated date of this settings field\n  """\n  updatedAt: DateTime!\n\n  """\n  The presence of this parameter determines whether the parameter is shared by all or personal to this owner\n  """\n  owner: ID\n\n  """\n  Settings group name\n  """\n  group: String!\n  category: SettingsCategory!\n\n  """\n  Settings value\n  """\n  value: JSON\n}',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(0),o=t(11),{transports:r,createLogger:a,format:s}=i.Winston,d=s.combine(s.metadata(),s.json(),s.timestamp({format:"YYYY-MM-DDTHH:mm:ssZZ"}),s.splat(),s.printf(e=>{const{timestamp:n,level:t,message:i,metadata:o}=e,r="{}"!==JSON.stringify(o)?o:null;return`${n} ${t}: ${i} ${r?JSON.stringify(r):""}`}));n.configureSettingsLogger=e=>{const{logDir:n,logFilenamePattern:t}=e,i=t||o.LOG_FILENAME_SETTINGS;return a({level:"debug",format:d,transports:[new r.DailyRotateFile({filename:`${n}/${i}`,level:"info",datePattern:o.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:o.LOG_MAZ_SIZE,maxFiles:o.LOG_MAZ_FILES}),new r.DailyRotateFile({filename:`${n}/${o.LOG_FILENAME_ERRORS}`,level:"error",datePattern:o.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:o.LOG_MAZ_SIZE,maxFiles:o.LOG_MAZ_FILES}),new r.DailyRotateFile({filename:`${n}/${o.LOG_FILENAME_DEBUG}`,level:"debug",datePattern:o.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:o.LOG_MAZ_SIZE,maxFiles:o.LOG_MAZ_FILES})]})},n.default=n.configureSettingsLogger},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(0);n.LOG_MAZ_FILES=i.LOG_MAZ_FILES,n.LOG_MAZ_SIZE=i.LOG_MAZ_SIZE,n.LOG_DATE_PATTERNT=i.LOG_DATE_PATTERNT,n.LOG_FILENAME_DEBUG=i.LOG_FILENAME_DEBUG,n.LOG_FILENAME_ERRORS=i.LOG_FILENAME_ERRORS,n.LOG_FILENAME_SETTINGS="settings-%DATE%.log"},function(e,n,t){"use strict";var i=this&&this.__awaiter||function(e,n,t,i){return new(t||(t=Promise))((function(o,r){function a(e){try{d(i.next(e))}catch(e){r(e)}}function s(e){try{d(i.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}d((i=i.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.makeSchema=e=>{const n=[],t={};return Object.entries(e).forEach(([e,t])=>{const i=e.charAt(0).toUpperCase()+e.slice(1),o=[];t.forEach(({category:e})=>{o.includes(e)||o.push(e)}),o.forEach(e=>{const o=e.charAt(0).toUpperCase()+e.slice(1),r=t.filter(n=>n.category===e);n.push(`\n        """\n        Type of «${i}» group for «${o}» category\n        This type was generated automatically\n        """\n        type Settings${i}${o}Fields {\n      `),r.forEach(({name:e})=>{(Array.isArray(e)?e:[e]).forEach(e=>{n.push(`\n            """\n            «${e}» options of «${i}» group for «${o}» category\n            This type was generated automatically\n            """\n            ${e}: SettingsValue!\n          `)})}),n.push("\n        }\n      ")}),n.push(`\n      extend type SettingsCollection {\n        ${e}: Settings${i}Group!\n      }\n    `),o.forEach((e,t)=>{const r=e.charAt(0).toUpperCase()+e.slice(1);0===t&&n.push(`\n          """\n          «${i}» settings group\n          Note: this type was generated automatically\n          """\n          type Settings${i}Group {\n        `),n.push(`\n        ${e}: Settings${i}${r}Fields!\n      `),t===o.length-1&&n.push("\n        }")})}),Object.entries(e).forEach(([e,n])=>{const o=e.charAt(0).toUpperCase()+e.slice(1),r=[];n.forEach(({category:e})=>{r.includes(e)||r.push(e)}),t.SettingsCollection=t.SettingsCollection||{},t.SettingsCollection[e]=n=>Object.assign(Object.assign({},n),{group:e}),t[`Settings${o}Group`]={},r.forEach(e=>{const r=n.filter(n=>n.category===e);t[`Settings${o}Group`][e]=n=>i(void 0,void 0,void 0,(function*(){return Object.assign(Object.assign({},n),{category:e})}));const a={};r.forEach(({name:e})=>{(Array.isArray(e)?e:[e]).forEach(e=>{a[e]=n=>i(void 0,void 0,void 0,(function*(){const{owner:t}=n;return Object.assign(Object.assign({},n),{owner:t,name:e})}))})});const s=e.charAt(0).toUpperCase()+e.slice(1);t[`Settings${o}${s}Fields`]=a})}),{typeDefs:n.join("\n"),resolvers:t}}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.general="general",e.ui="ui",e.contact="contact",e.constraint="constraint",e.currency="currency",e.size="size",e.label="label",e.other="other"}(n.TSettingsCategory||(n.TSettingsCategory={}))}]);